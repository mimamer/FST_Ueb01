/* Michelle Mergen - 1293151
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'de.undercouch.download' version '4.1.1'
}

javafx{
    version='11.0.2'
    modules=['javafx.controls']
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation('com.google.code.gson:gson:2.10')
}

application {
    // Define the main class for the application.
    mainClass = 'fst.gradle.ci.App'
}

task buildCore(){//
	doLast{
        sourceSets{
            main{
                java{
                    srcDirs=["src/main/java/de/unitrier/st/core"]
                    //Folie 15/35 alternativ
                    //srcDir 'src/main'
                    //exclude '**/ui/*.java'
                }

            }
        }
	}
    finalizedBy(build)
}

task buildUI(){//
	doLast{
        sourceSets{
            main{
                java{
                    srcDirs=["src/main"]
                    //Folie 15/35 alternativ
                    //srcDir 'src/main'
                }

            }
        }
	}
    finalizedBy(build)
}

task runCore(){
    doLast{
        application{
            mainClass = 'de.unitrier.st.core.Main'
        }
    }
    
    finalizedBy(run)
}

task runUI(){
    doLast{
        application{
            mainClass = 'de.unitrier.st.ui.Ui'
        }
    }
    finalizedBy(run)
}

//Folie 24/35
task downloadZip(type: Download){
    src 'https://datahub.io/core/covid-19/r/covid-19_zip.zip'
    dest buildDir
    onlyIfModified true
}

//Folie 23/35
task unpackZip(type: Copy, dependsOn: downloadZip) {
    from zipTree(file("build/covid-19_zip.zip"))
    into file("build/resources")
}

task moveJson(type:Copy, dependsOn: unpackZip){
    def oldLoc=file("$buildDir/resources/data/countries-aggregated_json.json")
    def newLoc=file("src/main/resources")

    from oldLoc
    into newLoc
}
task processZip(dependsOn: moveJson){}
